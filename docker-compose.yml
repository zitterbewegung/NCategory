services:
  elasticsearch:
    image: elasticsearch:7.17.0  # Updated to a more recent version
    environment:
      - discovery.type=single-node  # Required for Elasticsearch in a single-node setup
      - ES_JAVA_OPTS=-Xms512m -Xmx512m  # Set JVM options to limit memory usage
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - ./config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
      - esdata:/usr/share/elasticsearch/data
    networks:
      - app-network

  redis:
    image: redis:6.2.6  # Updated to a newer version
    networks:
      - app-network

  rabbitmq:
    image: "rabbitmq:4.0-management"  # Includes the management plugin
    hostname: "rmq"
    ports:
      - "5672:5672"
      - "15672:15672"  # RabbitMQ Management UI
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASSWORD=guest
    networks:
      - app-network

  db:
    image: postgres:13  # Updated to a more recent version
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres  # Set a password
      POSTGRES_DB: postgres
    volumes:
      - dbdata:/var/lib/postgresql/data
    networks:
      - app-network



  web:
    build: .
    ports:
      - "8000:8000"
    volumes:
      - ~/datasets/:/app/data
      - .:/app
      - /app/node_modules  # Ensure node_modules is accessible for web service
    depends_on:
      - db
      - elasticsearch
      - rabbitmq
      - redis
    environment:
      PYTHONDONTWRITEBYTECODE: '1'
      DATABASE_URL: postgres://postgres:postgres@db:5432/postgres
      DEBUG: 'True'
      ALLOWED_HOSTS: 'localhost,127.0.0.1'
      SECRET_KEY: 'your-secret-key'
      DSN: 'your-dsn'
      NEW_RELIC_LICENSE_KEY: 'your-new-relic-license-key'
      NEW_RELIC_APP_NAME: 'mrfantastic'
    command: /bin/sh -c 'PATH=/usr/local/bin:$PATH ln -s /usr/bin/python3 /usr/bin/python && ./bin/run-dev.sh'
    networks:
      - app-network

  worker:
    build: .
    volumes:
      - .:/app
    depends_on:
      - db
      - rabbitmq
      - redis
    command: ./bin/run-celery.sh
    environment:
      PYTHONDONTWRITEBYTECODE: '1'
      DATABASE_URL: postgres://postgres:postgres@db:5432/postgres
      DEBUG: 'True'
      ALLOWED_HOSTS: 'localhost,127.0.0.1'
      SECRET_KEY: 'your-secret-key'
      DSN: 'your-dsn'
      NEW_RELIC_LICENSE_KEY: 'your-new-relic-license-key'
      NEW_RELIC_APP_NAME: 'mrfantastic'
    networks:
      - app-network

volumes:
  esdata:
  dbdata:

networks:
  app-network:
